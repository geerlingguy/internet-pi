---
- name: Create Pi-hole folder on Pi.
  ansible.builtin.file:
    path: "{{ config_dir }}/pi-hole"
    state: directory
    mode: 0755
  become: false

- name: Copy Pi-hole docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/pi-hole-docker-compose.yml.j2
    dest: "{{ config_dir }}/pi-hole/docker-compose.yml"
    mode: '0640'
  become: false
  notify: Restart pi-hole

# TODO: The first time this playbook is run, the `pi` user may not be added
# to the `docker` group, so this task may fail.
- name: Ensure Pi-hole is running.
  community.docker.docker_compose:
    project_src: "{{ config_dir }}/pi-hole/"
    build: false
  become: false

- name: Copy Pi-hole backup script to Pi.
  ansible.builtin.template:
    src: templates/pi-hole-backup.sh.j2
    dest: "{{ config_dir }}/pi-hole/backup.sh"
    mode: '0750'
  become: false


- name: Configure Pi-hole backup cron job.
  ansible.builtin.cron:
    name: "Pi-hole backup"
    state: present
    user: "pi"
    minute: "0"
    hour: "3"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/bin/bash {{ config_dir}}/pi-hole/backup.sh >> {{ config_dir}}/pi-hole/backup-log.log 2>&1"

- name: Update resolveconf for local name server use.
  ansible.builtin.lineinfile:
    line: "name_servers=127.0.0.1"
    dest: "/etc/resolvconf.conf"
    regexp: "^#?name_servers="
  register: resolvconf_file

- name: Regenerate resolvconf if file is changed.
  ansible.builtin.command: resolvconf -u
  changed_when: false
  when: resolvconf_file is changed
